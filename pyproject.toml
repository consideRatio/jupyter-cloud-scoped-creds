# build-system
# - ref: https://peps.python.org/pep-0517/
#
[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"


# project
# - ref 1: https://peps.python.org/pep-0621/
#
[project]
name = "jupyter-cloud-creds"
version = "0.1.0"
description = "Server extension to get temporary cloud credentials from jupterhub"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["jupyterhub"]
authors = [
    {name = "Scott Henderson"},
    {name = "Yuvi Panda"},
    {name = "Jupyter Contributors", email = "jupyter@googlegroups.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "jupyter_server>=2.14",
    "tornado",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-jupyter[server]",
]

[project.urls]
Documentation = "https://jupyter-cloud-creds.readthedocs.io"
Source = "https://github.com/jupyterhub/jupyter-cloud-creds"
Issues = "https://github.com/jupyterhub/jupyter-cloud-creds/issues"



# setuptools ref: https://setuptools.pypa.io/en/latest/
#
# NOTE: Editable installs (pip install -e .) needs to be complemented with
#       "jupyter server extension enable jupyter_cloud_creds" to work.
#
[tool.setuptools.data-files]
"etc/jupyter/jupyter_server_config.d" = ["jupyter-config/jupyter_server_config.d/jupyter_cloud_creds.json"]
"etc/jupyter/jupyter_notebook_config.d" = ["jupyter-config/jupyter_notebook_config.d/jupyter_cloud_creds.json"]



# autoflake is used for autoformatting Python code
#
# ref: https://github.com/PyCQA/autoflake#readme
#
[tool.autoflake]
ignore-init-module-imports = true
remove-all-unused-imports = true
remove-duplicate-keys = true
remove-unused-variables = true


# isort is used for autoformatting Python code
#
# ref: https://pycqa.github.io/isort/
#
[tool.isort]
profile = "black"


# black is used for autoformatting Python code
#
# ref: https://black.readthedocs.io/en/stable/
#
[tool.black]


# pytest is used for running Python based tests
#
# ref: https://docs.pytest.org/en/stable/
#
[tool.pytest.ini_options]
addopts = "--verbose --color=yes --durations=10"
testpaths = ["tests"]



# tbump is used to simplify and standardize the release process when updating
# the version, making a git commit and tag, and pushing changes.
#
# ref: https://github.com/your-tools/tbump#readme
#
[tool.tbump.version]
current = "0.1.0"
regex = '''
    (?P<major>\d+)
    \.
    (?P<minor>\d+)
    \.
    (?P<patch>\d+)
    (?P<pre>((a|b|rc)\d+)|)
    \.?
    (?P<dev>(?<=\.)dev\d*|)
'''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "{new_version}"

[[tool.tbump.file]]
src = "jupyter_cloud_creds/_version.py"

[[tool.tbump.file]]
src = "pyproject.toml"
search = 'version = "{current_version}"'
